#!/usr/bin/env ruby

def main
    IO.popen("nant #{ARGV.join(' ')}") do |pipe|
        pipe.sync = true
        while str = pipe.gets
            str.chomp!  # Entfernt das Zeilenende
            puts colorize(str)
        end
    end
end

def clear
    "\e[0m"
end

def red(str)
    "\e[31m#{str}#{clear}"
end

def green(str)
    "\e[32m#{str}#{clear}"
end

def yellow(str)
    "\e[33m#{str}#{clear}"
end

def hide 
    "\e[8m"
end

def bright
    "\e[1m"
end

def colorize(str)
    str.sub!(/(error \w+:.*)/i, red('\1'))
    str.sub!(/(warning \w+:.*)/i, yellow('\1'))

    str.sub!(/(Build Succeeded)/i, green('\1'))
    str.sub!(/(Compilation succeeded)/i, green('\1'))
    str.sub!(/(\d+ warning\(s\))/i, yellow('\1'))
    str.sub!(/(Build Failed)/i, red('\1'))

    str.sub!(/(Tests run: \d+, Failures: 0, Not run: 0,.*)/i, green('\1'))
    str.sub!(/(Tests run: \d+, Failures: 0, Not run: [1-9].*)/i, yellow('\1'))
    str.sub!(/(Tests run: \d+, Failures: [1-9].*)/i, red('\1'))
    str.sub!(/(Test Case Failures:)/i, red('\1'))
    str
end

main()
